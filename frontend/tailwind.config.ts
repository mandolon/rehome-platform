import type { Config } from "tailwindcss";

const config: Config = {
  darkMode: ["class"],
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
    "./stories/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        // Design system colors using CSS variables
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
          50: "hsl(var(--color-primary-50))",
          100: "hsl(var(--color-primary-100))",
          200: "hsl(var(--color-primary-200))",
          300: "hsl(var(--color-primary-300))",
          400: "hsl(var(--color-primary-400))",
          500: "hsl(var(--color-primary-500))",
          600: "hsl(var(--color-primary-600))",
          700: "hsl(var(--color-primary-700))",
          800: "hsl(var(--color-primary-800))",
          900: "hsl(var(--color-primary-900))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        // Semantic colors from tokens
        success: {
          50: "hsl(var(--color-success-50))",
          100: "hsl(var(--color-success-100))",
          200: "hsl(var(--color-success-200))",
          300: "hsl(var(--color-success-300))",
          400: "hsl(var(--color-success-400))",
          500: "hsl(var(--color-success-500))",
          600: "hsl(var(--color-success-600))",
          700: "hsl(var(--color-success-700))",
          800: "hsl(var(--color-success-800))",
          900: "hsl(var(--color-success-900))",
        },
        warning: {
          50: "hsl(var(--color-warning-50))",
          100: "hsl(var(--color-warning-100))",
          200: "hsl(var(--color-warning-200))",
          300: "hsl(var(--color-warning-300))",
          400: "hsl(var(--color-warning-400))",
          500: "hsl(var(--color-warning-500))",
          600: "hsl(var(--color-warning-600))",
          700: "hsl(var(--color-warning-700))",
          800: "hsl(var(--color-warning-800))",
          900: "hsl(var(--color-warning-900))",
        },
        error: {
          50: "hsl(var(--color-error-50))",
          100: "hsl(var(--color-error-100))",
          200: "hsl(var(--color-error-200))",
          300: "hsl(var(--color-error-300))",
          400: "hsl(var(--color-error-400))",
          500: "hsl(var(--color-error-500))",
          600: "hsl(var(--color-error-600))",
          700: "hsl(var(--color-error-700))",
          800: "hsl(var(--color-error-800))",
          900: "hsl(var(--color-error-900))",
        },
        gray: {
          50: "hsl(var(--color-gray-50))",
          100: "hsl(var(--color-gray-100))",
          200: "hsl(var(--color-gray-200))",
          300: "hsl(var(--color-gray-300))",
          400: "hsl(var(--color-gray-400))",
          500: "hsl(var(--color-gray-500))",
          600: "hsl(var(--color-gray-600))",
          700: "hsl(var(--color-gray-700))",
          800: "hsl(var(--color-gray-800))",
          900: "hsl(var(--color-gray-900))",
        },
      },
      borderRadius: {
        lg: "var(--radius-lg)",
        md: "var(--radius-md)",
        sm: "var(--radius-sm)",
        DEFAULT: "var(--radius)",
        xl: "var(--radius-xl)",
        "2xl": "var(--radius-2xl)",
        "3xl": "var(--radius-3xl)",
        full: "var(--radius-full)",
      },
      spacing: {
        0.5: "var(--spacing-0-5)",
        1.5: "var(--spacing-1-5)",
        2.5: "var(--spacing-2-5)",
        3.5: "var(--spacing-3-5)",
      },
      boxShadow: {
        sm: "var(--shadow-sm)",
        DEFAULT: "var(--shadow)",
        md: "var(--shadow-md)",
        lg: "var(--shadow-lg)",
        xl: "var(--shadow-xl)",
        "2xl": "var(--shadow-2xl)",
        inner: "var(--shadow-inner)",
      },
      fontSize: {
        xs: ["var(--text-xs)", { lineHeight: "var(--leading-4)" }],
        sm: ["var(--text-sm)", { lineHeight: "var(--leading-5)" }],
        base: ["var(--text-base)", { lineHeight: "var(--leading-6)" }],
        lg: ["var(--text-lg)", { lineHeight: "var(--leading-7)" }],
        xl: ["var(--text-xl)", { lineHeight: "var(--leading-7)" }],
        "2xl": ["var(--text-2xl)", { lineHeight: "var(--leading-8)" }],
        "3xl": ["var(--text-3xl)", { lineHeight: "var(--leading-9)" }],
        "4xl": ["var(--text-4xl)", { lineHeight: "var(--leading-10)" }],
        "5xl": ["var(--text-5xl)", { lineHeight: "1" }],
        "6xl": ["var(--text-6xl)", { lineHeight: "1" }],
        "7xl": ["var(--text-7xl)", { lineHeight: "1" }],
        "8xl": ["var(--text-8xl)", { lineHeight: "1" }],
        "9xl": ["var(--text-9xl)", { lineHeight: "1" }],
      },
      fontFamily: {
        sans: ["var(--font-sans)"],
        serif: ["var(--font-serif)"],
        mono: ["var(--font-mono)"],
      },
      zIndex: {
        auto: "var(--z-auto)",
        0: "var(--z-0)",
        10: "var(--z-10)",
        20: "var(--z-20)",
        30: "var(--z-30)",
        40: "var(--z-40)",
        50: "var(--z-50)",
        dropdown: "var(--z-dropdown)",
        sticky: "var(--z-sticky)",
        fixed: "var(--z-fixed)",
        "modal-backdrop": "var(--z-modal-backdrop)",
        modal: "var(--z-modal)",
        popover: "var(--z-popover)",
        tooltip: "var(--z-tooltip)",
        toast: "var(--z-toast)",
      },
      transitionDuration: {
        75: "var(--duration-75)",
        100: "var(--duration-100)",
        150: "var(--duration-150)",
        200: "var(--duration-200)",
        300: "var(--duration-300)",
        500: "var(--duration-500)",
        700: "var(--duration-700)",
        1000: "var(--duration-1000)",
      },
      transitionTimingFunction: {
        linear: "var(--ease-linear)",
        in: "var(--ease-in)",
        out: "var(--ease-out)",
        "in-out": "var(--ease-in-out)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
};

export default config;
