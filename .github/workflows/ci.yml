name: CI

on:
  pull_request:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          extensions: mbstring, dom, pdo_sqlite, sqlite3, json, curl, fileinfo

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: backend/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install deps
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: App key & env
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: SQLite setup
        run: |
          mkdir -p database
          touch database/database.sqlite
          php artisan migrate --no-interaction -q

      - name: Tests
        run: php artisan test -q

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: pnpm

      - name: Enable Corepack (pnpm 8.x)
        run: |
          corepack enable
          corepack prepare pnpm@8.15.4 --activate
          pnpm -v
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run lint
        run: pnpm lint
      
      - name: Run typecheck
        run: pnpm run typecheck
      
      - name: Run tests
        run: pnpm run test -- --run --reporter=dot --test-timeout=30000